import React, { useState } from 'react'
import { useParams, useNavigate } from 'react-router-dom'
import { getTeaById } from '../data/teaData'
import { useCartStore } from '../stores/cartStore'
import { useFirebaseFavoritesStore } from '../stores/firebaseFavoritesStore'
import './Product.css'

const Product: React.FC = () => {
  const { id } = useParams<{ id: string }>()
  const navigate = useNavigate()
  const { addToCart } = useCartStore()
  const { isFavorite, toggleFavorite } = useFirebaseFavoritesStore()
  const [quantity, setQuantity] = useState(1)

  const tea = getTeaById(Number(id))

  if (!tea) {
    return (
      <div className="page product-page">
        <div className="container">
          <div className="product-not-found">
            <h1>üòî –¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω</h1>
            <p>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ç–∞–∫–æ–π —á–∞–π –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –Ω–∞—à–µ–º –∫–∞—Ç–∞–ª–æ–≥–µ</p>
            <button 
              className="btn btn-primary"
              onClick={() => navigate('/catalog')}
            >
              –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞—Ç–∞–ª–æ–≥
            </button>
          </div>
        </div>
      </div>
    )
  }

  const handleAddToCart = () => {
    addToCart({
      id: tea.id,
      name: tea.name,
      price: tea.price,
      image: tea.image
    })
    navigate('/cart')
  }

  const handleQuantityChange = (newQuantity: number) => {
    if (newQuantity >= 1) {
      setQuantity(newQuantity)
    }
  }

  return (
    <div className="page product-page">
      <div className="container">
        <div className="product-content">
          <div className="product-image-section">
            <div className="product-image-container">
              <div className="product-image">{tea.image}</div>
              <button 
                className={`favorite-btn ${isFavorite(tea.id) ? 'active' : ''}`}
                onClick={() => toggleFavorite(tea.id)}
                aria-label={isFavorite(tea.id) ? '–£–±—Ä–∞—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ' : '–î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ'}
              >
                {isFavorite(tea.id) ? '‚ù§Ô∏è' : 'ü§ç'}
              </button>
            </div>
            <div className="product-badges">
              <span className="badge origin">{tea.origin}</span>
              <span className="badge weight">{tea.weight}–≥</span>
            </div>
          </div>

          <div className="product-info-section">
            <h1 className="product-title">{tea.name}</h1>
            <p className="product-description">{tea.description}</p>
            
            <div className="product-specs">
              <div className="spec-item">
                <span className="spec-label">–¢–∏–ø —á–∞—è:</span>
                <span className="spec-value">{tea.type}</span>
              </div>
              <div className="spec-item">
                <span className="spec-label">–ü—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏–µ:</span>
                <span className="spec-value">{tea.origin}</span>
              </div>
              <div className="spec-item">
                <span className="spec-label">–ö–æ—Ñ–µ–∏–Ω:</span>
                <span className="spec-value">
                  {tea.caffeine === 'high' ? '–í—ã—Å–æ–∫–∏–π ‚òï‚òï‚òï' : 
                   tea.caffeine === 'medium' ? '–°—Ä–µ–¥–Ω–∏–π ‚òï‚òï' : 
                   tea.caffeine === 'low' ? '–ù–∏–∑–∫–∏–π ‚òï' : '–ë–µ–∑ –∫–æ—Ñ–µ–∏–Ω–∞ ü´ñ'}
                </span>
              </div>
              <div className="spec-item">
                <span className="spec-label">–í–µ—Å:</span>
                <span className="spec-value">{tea.weight} –≥—Ä–∞–º–º</span>
              </div>
            </div>

            <div className="product-price-section">
              <div className="product-price">{tea.price} ‚ÇΩ</div>
              <div className="product-availability">
                {tea.inStock ? (
                  <span className="in-stock">‚úÖ –í –Ω–∞–ª–∏—á–∏–∏</span>
                ) : (
                  <span className="out-of-stock">‚ùå –ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏</span>
                )}
              </div>
            </div>

            {tea.inStock && (
              <div className="product-actions">
                <div className="quantity-selector">
                  <button 
                    className="quantity-btn"
                    onClick={() => handleQuantityChange(quantity - 1)}
                    disabled={quantity <= 1}
                  >
                    -
                  </button>
                  <span className="quantity-value">{quantity}</span>
                  <button 
                    className="quantity-btn"
                    onClick={() => handleQuantityChange(quantity + 1)}
                  >
                    +
                  </button>
                </div>
                
                <button 
                  className="btn btn-primary add-to-cart-btn"
                  onClick={handleAddToCart}
                >
                  üõí –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É
                </button>
              </div>
            )}

            <div className="product-navigation">
              <button 
                className="btn btn-secondary"
                onClick={() => navigate('/catalog')}
              >
                ‚Üê –ù–∞–∑–∞–¥ –≤ –∫–∞—Ç–∞–ª–æ–≥
              </button>
              <button 
                className="btn btn-secondary"
                onClick={() => navigate('/cart')}
              >
                üõí –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}

export default Product


